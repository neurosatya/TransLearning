clear all
close all




dir(fullfile(folderString, '*.mat'));

gdfX=strcat(gdfInfo(run).folder,'/',gdfInfo(run).name);
txtX=strcat(txtInfo(run).folder,'/',txtInfo(run).name);




sampling = 512;


txtFile=txtX;

[signal,h]=sload(gdfX);


AA=readtable(txtFile);

nEvents=size(AA,1);
eventHeader=[];

for e=1:nEvents
    string=char(table2array(AA(e,2)));
    
    matchStart=string(1)=='s';

    if(numel(find(matchStart==0))==0)
%         fprintf(' Race started  \n');
        eventHeader=[eventHeader;[table2array(AA(e,1)),32766]];
        continue
    end
    
    
    matchLevelPlayer=string(1:2)=='p1';
    
    matchFinish=string(1:9)=='p1_finish';
    
    if(numel(find(matchFinish==0))==0)
%         fprintf('Race Analysis Finished \n');
        eventHeader=[eventHeader;[table2array(AA(e,1)),32766]];

%         eventHeader=[eventHeader;(event,)
        break
    end
    
    if(numel(find(matchLevelPlayer==0))~=0)
        continue
    else
        %% check here for expected input
%         string(1:18)

        matchLevelNone=string(1:18)=='p1_expectedInput n';
        if(numel(find(matchLevelNone==0))==0)
            continue
        end
        matchLevelLeft=string(1:18)=='p1_expectedInput l'; 
        if(numel(find(matchLevelLeft==0))==0)
%             fprintf('left Command Expected Here\n')
            %%% Here goes the delivered commands
            flag=1;
            eventHeader=[eventHeader;[table2array(AA(e,1)),7691]];

            
        end
        matchLevelRight=string(1:18)=='p1_expectedInput r'; 
        if(numel(find(matchLevelRight==0))==0)
%             fprintf('Right Command Expected Here\n')
            flag=1;
            eventHeader=[eventHeader;[table2array(AA(e,1)),7701]];

        end

        inputRight=string(1:18)=='p1_input rightWink'; 
        if(numel(find(inputRight==0))==0)
%             fprintf('Input was Right Command\n')
            flag=1;
%             eventHeader=[eventHeader;[table2array(AA(e,1)),770]];

            
        end
        
        
        inputLeft=string(1:18)=='p1_input leftWinke'; 
        if(numel(find(inputLeft==0))==0)
%             fprintf('Input was Left Command\n')
            flag=1;
%             eventHeader=[eventHeader;[table2array(AA(e,1)),769]];

        end
                
        
        
        
    end
end

eventHeader(:,1)=floor(eventHeader(:,1)*512);
raceTime=[raceTime,eventHeader(end,1)-eventHeader(1,1)];
number=floor(eventHeader(1,1))-floor(h.EVENT.POS(1)+2.67*512);
% 
eventHeader(:,1)=eventHeader(:,1)-number;


event1=h.EVENT.POS(1);
eventEnd=h.EVENT.POS(end);

epochEnd=event1+5*decoder.fs;
flag=1;
prob = zeros(length(decoder.classification.model.ClassNames),1)+0.5;
updateRate=decoder.classification.model.updateRate; % log this also in decoder File;






clearvars -except runCounter thresholds kappaValueSampleWise AccuracyValue raceTime checkMatrix raceKappa...
    KappaValueRaceHits sessionID run gdfInfo folderString subjectID testingSubject modality LHAccuracy RHAccuracy...
    nSessions dataString 

end
fprintf('----------------------------\n')

end
